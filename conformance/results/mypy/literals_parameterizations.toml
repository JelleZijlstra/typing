conformant = "Partial"
notes = """Does not reject tuple within Literal.
"""
output = """
literals_parameterizations.py:41: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:42: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:43: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:44: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:45: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:47: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:48: error: Parameter 1 of Literal[...] is invalid  [valid-type]
literals_parameterizations.py:49: error: Parameter 1 of Literal[...] is invalid  [valid-type]
literals_parameterizations.py:50: error: Parameter 1 of Literal[...] is invalid  [valid-type]
literals_parameterizations.py:51: error: Parameter 1 of Literal[...] cannot be of type "float"  [valid-type]
literals_parameterizations.py:52: error: Parameter 1 of Literal[...] cannot be of type "Any"  [valid-type]
literals_parameterizations.py:53: error: Parameter 1 of Literal[...] is invalid  [valid-type]
literals_parameterizations.py:56: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]
literals_parameterizations.py:60: error: Literal[...] must have at least one parameter  [valid-type]
literals_parameterizations.py:61: error: Parameter 1 of Literal[...] is invalid  [valid-type]
literals_parameterizations.py:65: error: Incompatible types in assignment (expression has type "Literal[Color.RED]", variable has type "Literal['Color.RED']")  [assignment]
"""
conformance_automated = "Fail"
errors_diff = """
Line 41: Unexpected errors ['literals_parameterizations.py:41: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 42: Unexpected errors ['literals_parameterizations.py:42: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 43: Unexpected errors ['literals_parameterizations.py:43: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 44: Unexpected errors ['literals_parameterizations.py:44: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 45: Unexpected errors ['literals_parameterizations.py:45: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 47: Unexpected errors ['literals_parameterizations.py:47: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 48: Unexpected errors ['literals_parameterizations.py:48: error: Parameter 1 of Literal[...] is invalid  [valid-type]']
Line 49: Unexpected errors ['literals_parameterizations.py:49: error: Parameter 1 of Literal[...] is invalid  [valid-type]']
Line 50: Unexpected errors ['literals_parameterizations.py:50: error: Parameter 1 of Literal[...] is invalid  [valid-type]']
Line 51: Unexpected errors ['literals_parameterizations.py:51: error: Parameter 1 of Literal[...] cannot be of type "float"  [valid-type]']
Line 52: Unexpected errors ['literals_parameterizations.py:52: error: Parameter 1 of Literal[...] cannot be of type "Any"  [valid-type]']
Line 53: Unexpected errors ['literals_parameterizations.py:53: error: Parameter 1 of Literal[...] is invalid  [valid-type]']
Line 56: Unexpected errors ['literals_parameterizations.py:56: error: Invalid type: Literal[...] cannot contain arbitrary expressions  [valid-type]']
Line 60: Unexpected errors ['literals_parameterizations.py:60: error: Literal[...] must have at least one parameter  [valid-type]']
Line 61: Unexpected errors ['literals_parameterizations.py:61: error: Parameter 1 of Literal[...] is invalid  [valid-type]']
Line 65: Unexpected errors ['literals_parameterizations.py:65: error: Incompatible types in assignment (expression has type "Literal[Color.RED]", variable has type "Literal[\\'Color.RED\\']")  [assignment]']
"""
