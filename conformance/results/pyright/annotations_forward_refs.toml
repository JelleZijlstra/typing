conformant = "Pass"
output = """
annotations_forward_refs.py:22:7 - error: "ClassA" is not defined (reportUndefinedVariable)
annotations_forward_refs.py:23:12 - error: "ClassA" is not defined (reportUndefinedVariable)
annotations_forward_refs.py:24:7 - error: Union syntax cannot be used with string operand; use quotes around entire expression (reportGeneralTypeIssues)
annotations_forward_refs.py:25:13 - error: Union syntax cannot be used with string operand; use quotes around entire expression (reportGeneralTypeIssues)
annotations_forward_refs.py:41:9 - error: Expected type but received a string literal (reportGeneralTypeIssues)
annotations_forward_refs.py:42:10 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
annotations_forward_refs.py:42:10 - error: Expected type expression but received "list[Unknown]" (reportGeneralTypeIssues)
annotations_forward_refs.py:43:10 - error: Tuple expression not allowed in type annotation
  Use tuple[T1, ..., Tn] to indicate a tuple type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
annotations_forward_refs.py:44:10 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
annotations_forward_refs.py:44:10 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)
annotations_forward_refs.py:45:10 - error: Dictionary expression not allowed in type annotation
  Use Dict[T1, T2] to indicate a dictionary type (reportInvalidTypeForm)
annotations_forward_refs.py:45:10 - error: Expected type expression but received "dict[Unknown, Unknown]" (reportGeneralTypeIssues)
annotations_forward_refs.py:46:10 - error: Call expression not allowed in type expression (reportInvalidTypeForm)
annotations_forward_refs.py:47:10 - error: List expression not allowed in type annotation
  Use List[T] to indicate a list type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
annotations_forward_refs.py:47:10 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)
annotations_forward_refs.py:48:10 - error: Ternary expression not allowed in type annotation (reportInvalidTypeForm)
annotations_forward_refs.py:49:10 - error: Variable not allowed in type expression (reportInvalidTypeForm)
annotations_forward_refs.py:50:11 - error: Expected type expression but received "Literal[True]" (reportGeneralTypeIssues)
annotations_forward_refs.py:51:11 - error: Expected type expression but received "Literal[1]" (reportGeneralTypeIssues)
annotations_forward_refs.py:52:11 - error: Unary operator not allowed in type annotation (reportInvalidTypeForm)
annotations_forward_refs.py:53:11 - error: Binary operator not allowed in type annotation (reportInvalidTypeForm)
annotations_forward_refs.py:54:11 - error: Expected expression
annotations_forward_refs.py:54:11 - error: Tuple expression not allowed in type annotation
  Use tuple[T1, ..., Tn] to indicate a tuple type or Union[T1, T2] to indicate a union type (reportInvalidTypeForm)
annotations_forward_refs.py:55:10 - error: Module cannot be used as a type (reportGeneralTypeIssues)
annotations_forward_refs.py:66:26 - error: "ClassB" is not defined (reportUndefinedVariable)
annotations_forward_refs.py:80:14 - error: Type of "ClassF" could not be determined because it refers to itself (reportGeneralTypeIssues)
annotations_forward_refs.py:80:14 - error: Variable not allowed in type expression (reportInvalidTypeForm)
annotations_forward_refs.py:89:8 - error: Expected type expression but received "(self: Self@ClassD) -> None" (reportGeneralTypeIssues)
"""
conformance_automated = "Fail"
errors_diff = """
Line 80: Expected 1 errors, got 2 (['annotations_forward_refs.py:80:14 - error: Type of "ClassF" could not be determined because it refers to itself (reportGeneralTypeIssues)', 'annotations_forward_refs.py:80:14 - error: Variable not allowed in type expression (reportInvalidTypeForm)'])
Line 22: Unexpected errors ['annotations_forward_refs.py:22:7 - error: "ClassA" is not defined (reportUndefinedVariable)']
Line 23: Unexpected errors ['annotations_forward_refs.py:23:12 - error: "ClassA" is not defined (reportUndefinedVariable)']
Line 24: Unexpected errors ['annotations_forward_refs.py:24:7 - error: Union syntax cannot be used with string operand; use quotes around entire expression (reportGeneralTypeIssues)']
Line 25: Unexpected errors ['annotations_forward_refs.py:25:13 - error: Union syntax cannot be used with string operand; use quotes around entire expression (reportGeneralTypeIssues)']
Line 41: Unexpected errors ['annotations_forward_refs.py:41:9 - error: Expected type but received a string literal (reportGeneralTypeIssues)']
Line 42: Unexpected errors ['annotations_forward_refs.py:42:10 - error: List expression not allowed in type annotation', 'annotations_forward_refs.py:42:10 - error: Expected type expression but received "list[Unknown]" (reportGeneralTypeIssues)']
Line 43: Unexpected errors ['annotations_forward_refs.py:43:10 - error: Tuple expression not allowed in type annotation']
Line 44: Unexpected errors ['annotations_forward_refs.py:44:10 - error: List expression not allowed in type annotation', 'annotations_forward_refs.py:44:10 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)']
Line 45: Unexpected errors ['annotations_forward_refs.py:45:10 - error: Dictionary expression not allowed in type annotation', 'annotations_forward_refs.py:45:10 - error: Expected type expression but received "dict[Unknown, Unknown]" (reportGeneralTypeIssues)']
Line 46: Unexpected errors ['annotations_forward_refs.py:46:10 - error: Call expression not allowed in type expression (reportInvalidTypeForm)']
Line 47: Unexpected errors ['annotations_forward_refs.py:47:10 - error: List expression not allowed in type annotation', 'annotations_forward_refs.py:47:10 - error: Expected type expression but received "list[type[int]]" (reportGeneralTypeIssues)']
Line 48: Unexpected errors ['annotations_forward_refs.py:48:10 - error: Ternary expression not allowed in type annotation (reportInvalidTypeForm)']
Line 49: Unexpected errors ['annotations_forward_refs.py:49:10 - error: Variable not allowed in type expression (reportInvalidTypeForm)']
Line 50: Unexpected errors ['annotations_forward_refs.py:50:11 - error: Expected type expression but received "Literal[True]" (reportGeneralTypeIssues)']
Line 51: Unexpected errors ['annotations_forward_refs.py:51:11 - error: Expected type expression but received "Literal[1]" (reportGeneralTypeIssues)']
Line 52: Unexpected errors ['annotations_forward_refs.py:52:11 - error: Unary operator not allowed in type annotation (reportInvalidTypeForm)']
Line 53: Unexpected errors ['annotations_forward_refs.py:53:11 - error: Binary operator not allowed in type annotation (reportInvalidTypeForm)']
Line 54: Unexpected errors ['annotations_forward_refs.py:54:11 - error: Expected expression', 'annotations_forward_refs.py:54:11 - error: Tuple expression not allowed in type annotation']
Line 55: Unexpected errors ['annotations_forward_refs.py:55:10 - error: Module cannot be used as a type (reportGeneralTypeIssues)']
Line 66: Unexpected errors ['annotations_forward_refs.py:66:26 - error: "ClassB" is not defined (reportUndefinedVariable)']
"""
